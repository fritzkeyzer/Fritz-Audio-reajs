desc: Filtered Clipper v3
//tags: Limiter
//author: Fritz

//slider1:6<-150,150,1>Adjustment (dB)
//slider2:0<-150,150,1>Max Volume (dB)
//slider2:100<0,100,1>Primary (%)
slider1:1<0.01,1,0.0001> P Threshold
slider2:1<0.01,1,0.0001> I Threshold
slider3:10<0.1,5000 0.00001> I freq 
//slider4:10<10,500, 0.00001> D freq 
//slider4:0.5<0.01,0.5, 0.00001> LPF Q (Hz)

@init
gr_meter=1;
gr_meter_decay = exp(1/(1*srate));
z1 = 0;
z2 = 0;
z1b = 0;
z2b = 0;

@slider
  thresh = slider1;
  rmsThresh = 0.9 * slider2 * 0.70710678118;
  invThresh = 1/thresh;
  
  //fc = slider3 / srate;
  fc = slider3 / srate;
  //fcD = slider4 / srate;
  Q = slider4;
  
  //biquad
  Q = 0.5;
  K = tan(3.14 * fc);
  norm = 1 / (1 + K / Q + K * K);
  a0 = K * K * norm;
  a1 = 2 * a0;
  a2 = a0;
  b1 = 2 * (K * K - 1) * norm;
  b2 = (1 - K / Q + K * K) * norm;
  
  Qb = 0.5;
  Kb = tan(3.14 * fc);
  normb = 1 / (1 + Kb / Qb + Kb * Kb);
  a0b = 1 * normb;
  a1b = -2 * a0b;
  a2b = a0b;
  b1b = 2 * (Kb * Kb - 1) * normb;
  b2b = (1 - Kb / Qb + Kb * Kb) * normb;
  
  

@sample

function myTanh(arg) (
  pos = exp(arg);
  neg = exp(-arg);
  (pos - neg) / (pos + neg);
);

s0 = spl0;
s1 = spl1;

m = max(abs(s0), abs(s1));

//PID envelopes:
in = m;
out = in*a0 + z1;
z1 = in*a1 + z2 - b1*out;
z2 = in*a2 - b2*out;
I = out;

in = m;
out = in*a0b + z1b;
z1b = in*a1b + z2b - b1b*out;
z2b = in*a2b - b2b*out;
D = out;

P = m;

//spl0 = D;
//spl1 = I;

Ie = I - rmsThresh;
//Ie = max(0, I - rmsThresh);
Pe = P - thresh;


//spl0 = Pe;
//spl1 = Ie;

Igain = 1;
//Igain = 1 / ((rmsThresh + Ie) / rmsThresh);
Ie > 0 ? (
  Igain = 1 / ((rmsThresh + Ie) / rmsThresh);
);

Pgain = 1;
Pe > 0 ? (
  Pgain = thresh / (thresh + Pe);
);

gain = min(Igain, Pgain);

//GAIN
s0 *= gain;
s1 *= gain;

gr_meter = gain;


spl0 = s0;
spl1 = s1;


@gfx 0 32 // request horizontal/vertical heights (0 means dont care)

  gr_meter *= exp(1/30); gr_meter>1?gr_meter=1; // decay meter here so if the audio processing stops it doesnt "stick"
  gfx_r=1; gfx_g=gfx_b=0; gfx_a=0.8;
  
  meter_bot=20;
  meter_h=min(gfx_h,32);
  xscale=gfx_w*20/meter_bot;

  gfx_y=0;
  gfx_x=gfx_w + log10(gr_meter)*xscale;
  gfx_rectto(gfx_w,meter_h);

  gfx_r=gfx_g=gfx_b=1.0; gfx_a=0.6;

  s2=sqrt(2)/2;
  g = s2;
  while(
    gfx_x=gfx_w + log10(g)*xscale;
    gfx_x >= 0 ? 
    (
      gfx_y=0;
      gfx_lineto(gfx_x,meter_h,0);
      gfx_y=meter_h-gfx_texth;
      gfx_x+=2;
      gfx_drawnumber(log10(g)*20,0);
      gfx_drawchar($'d');
      gfx_drawchar($'B');
    );
    g*=s2;
    gfx_x >=0;
  );
  gfx_a=1;

  gfx_x=0; gfx_y=meter_h/2 - gfx_texth/2;
  gfx_drawnumber(log10(gr_meter)*20,1);
  gfx_drawchar($'d');
  gfx_drawchar($'B');

